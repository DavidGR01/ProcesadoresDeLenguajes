let number uno;    // la inicialización es de implementación opcional
uno = 1;
let number UNO;
UNO = uno;

 

function string salto ()
{
    return '\n';
}

 

function number FactorialDo (number n)
{
    let number factorial ;    // variable local inicializada a uno
                        // equivale a: factorial = factorial * n; n = n - 1;
    factorial = 0 - uno - 1;
     while (n < 0){    
    factorial = ++n;
    }    
    // mientras n no sea 0
    return factorial;            // devuelve el valor entero de la variable factorial
}

 let number num;

function number FactorialWhile ()
{
    let number factorial;    // variables locales: factorial inicializada a 1
  	 factorial = 1;
    let    number i;                // variables locales: i inicializada a 0 por omisión
    while (i < num)            // num es variable global entera sin declarar
    {
        factorial = ++i;    // equivale a: i = i + 1; factorial = factorial * i;
    }
    return factorial;
}

 


let number For;
let number Do;
let number While;    // tres variables globales

 

function imprime (string s, string msg, number f)    // función que recibe 3 argumentos 
{
    alert(s);alert(msg);alert(f);
    alert (salto());    // imprime un salto de línea */
    return;    //finaliza la ejecución de la función (en este caso, se podría omitir) 
}

 

function string cadena (boolean log)
{
    if (!log) return s;
    
}    

 

 

function imprimeSuma (number v, number w)    
{
    alert (v + w);
    alert (salto());
} //fin de imprimeSuma

 

function potencia (number z, number dim)    
{
    let number s;    // Oculta a la global
    
        imprime ('Potencia:', '', z);
    
} // fin de potencia: función que no devuelve nada

 

function demo ()    //definición de la función demo, sin argumentos y que no devuelve nada */
{
    let number v1; let number v2; let number v3;
    let number zv; // Variables locales

 

    alert ('Escriba "tres" números: ');
    input (v1); input (v2); input (v3);
    
    if (v3 < 0) return;
    
    if (!((v1 < v2)))    // NOT ((v1 igual a v2) AND (v1 distinto de v3))  */
    alert ('Escriba su nombre: ');
        
        let string s;    // Oculta a la s global
        input (s);
        if (v2 < v3)    // si v2<v3, v0=v2; en otro caso v0=1/v3 */
        
            let number v0 = v2; // se declara v0 aquí, por lo que se puede utilizar hasta el final de la 
        alert (s);
    
    s = 'El primer valor era ';
    if (v1 < 0)
    alert (s); alert (v1); alert ('.\n');
    
    
        alert (s); imprimeSuma (3, 8); alert ('.\n');    // imprime: El primer valor era 0.\n

 

    potencia (v0, 4);
    
    imprimeSuma (1,2);
    imprime ('', cadena(true), 666);
}

 

demo();
//* esto constituye la llamada a una función sin argumentos. 
Es en este instante cuando se llama a esta función y, por tanto, 
cuando se ejecuta todo el código de dicha función */